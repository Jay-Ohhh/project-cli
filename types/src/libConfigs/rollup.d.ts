export const rollupConfig: "import { RollupOptions } from 'rollup';\nimport typescript from 'rollup-plugin-typescript2';\nimport babel from '@rollup/plugin-babel';\nimport resolve from '@rollup/plugin-node-resolve';\nimport commonjs from '@rollup/plugin-commonjs';\nimport { terser } from 'rollup-plugin-terser';\nimport clear from 'rollup-plugin-clear';\nimport progress from 'rollup-plugin-progress';\nimport { visualizer } from 'rollup-plugin-visualizer';\nimport copy from 'rollup-plugin-copy';\nimport json from '@rollup/plugin-json';\nimport { DEFAULT_EXTENSIONS } from '@babel/core';\nimport pkg from './package.json';\n\nconst isProd = process.env.NODE_ENV === 'production';\n\nconst options: RollupOptions[] = [\n  {\n    input: 'src/index.ts',\n    output: [\n      {\n        file: pkg.main,\n        format: 'cjs',\n        exports: 'auto',\n      },\n      {\n        file: pkg.module,\n        format: 'es',\n      },\n    ],\n    plugins: [\n      clear({\n        // required, point out which directories should be clear.\n        targets: ['dist'],\n        // optional, whether clear the directores when rollup recompile on --watch mode.\n        watch: true, // default: false\n      }),\n      progress({\n        clearLine: true, // default: true\n      }),\n      copy({\n        targets: [],\n      }),\n      json(),\n      resolve({\n        // default:true，需要显式设置来避免warning\n        // true: 同名模块优先选择内置模块，例如（fs、path）\n        // false: 同名模块优先选择安装的模块\n        preferBuiltins: true,\n      }),\n      commonjs(),\n      typescript(),\n      babel({\n        include: 'src/**/*',\n        exclude: '**/node_modules/**',\n        babelHelpers: 'runtime', // 构建库时使用\n        extensions: [...DEFAULT_EXTENSIONS, '.ts', '.tsx'],\n      }),\n      isProd &&\n        terser({\n          compress: {\n            // https://github.com/terser/terser\n            // 默认会去掉debugger\n            drop_console: true, // 去掉console\n            // pure_funcs:['console.log'] // 如果只想去除console.log，而不想去除console.info\n          },\n        }),\n      // put it the last one\n      isProd &&\n        visualizer({\n          filename: './out/report.html',\n          open: true,\n          gzipSize: true,\n        }),\n    ],\n    // 注意 outpput.globals 也要添加对应的值\n    external: [\n      ...Object.keys(pkg.dependencies || {}),\n      // @ts-ignore\n      ...Object.keys(pkg.peerDependencies || {}),\n      /@babel/runtime/,\n    ], //  babelHelpers:'runtime' 使用\n  },\n];\n\nexport default options;\n";
